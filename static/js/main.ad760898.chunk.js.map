{"version":3,"sources":["components/ContactList/ContactList.module.css","store/action.js","store/contactsSelectors.js","store/services.js","store/operations.js","store/reducer.js","store/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactsList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","filterContacts","createAction","getContacts","contacts","entities","fetchContacts","a","axios","get","data","addContacts","contact","post","deleteContacts","contactId","delete","id","defaults","baseURL","createAsyncThunk","_","rejectWithValue","fetchService","response","addContact","name","phone","number","deleteContact","createReducer","fulfilled","action","payload","state","filter","isLoading","pending","rejected","error","actions","combineReducers","store","configureStore","reducer","contactsReducer","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","value","className","styles","preventDefault","label","input","type","placeholder","pattern","title","required","onChange","submit","Filter","useSelector","dispatch","useDispatch","target","ContactsList","contactsData","selectors","useEffect","operations","items","toLowerCaseFilter","toLowerCase","el","includes","list","map","item","span","btn","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad760898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__qSV-M\",\"btn\":\"ContactList_btn__3AcNl\",\"span\":\"ContactList_span__ZV9Mw\"};","import { createAction } from '@reduxjs/toolkit';\nexport const filterContacts = createAction('filter');","export const getContacts = ({ contacts }) => contacts.entities;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61fbf9393f1e34001792c75a.mockapi.io'; \r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get('/contacts');\r\n  return data;\r\n}\r\n\r\nexport async function addContacts(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n  const {\r\n    data: { id },\r\n  } = await axios.delete(`/contacts/${contactId}`);\r\n  return id;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as fetchService from './services';\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'fetchContactsSuccess',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchService.fetchContacts();\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number: phone }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = { name, phone };\r\n      const response = await fetchService.addContacts(contact);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await fetchService.deleteContacts(contactId);\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  },\r\n);","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport { actions } from './';\nimport { fetchContacts, addContact, deleteContact } from './operations';\n\nconst entities = createReducer([], {\n  [fetchContacts.fulfilled]: (_, action) => action.payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, { payload }) => payload,\n  [addContact.fulfilled]: () => null,\n  [deleteContact.rejected]: (_, { payload }) => payload,\n  [deleteContact.fulfilled]: () => null,\n});\n\nconst filter = createReducer('', {\n  [actions.filterContacts]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  entities,\n  isLoading,\n  error,\n  filter,\n});","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});","import React, { useState } from 'react';\nimport styles from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    if (e.currentTarget.name === 'name') setName(e.currentTarget.value);\n    if (e.currentTarget.name === 'number') setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({\n      name: name,\n      number: number,\n    });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles['contact-form']} onSubmit={handleSubmit}>\n      <label className={styles.label}>\n        Name\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Enter name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer etc...\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.label}>\n        Number\n        <input\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"123-45-67\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.submit} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actions } from '../../store';\nimport styles from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  return (\n    <div className={styles.filter}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={filter}\n          onChange={e => {\n            dispatch(actions.filterContacts(e.target.value));\n          }}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport styles from './ContactList.module.css';\nimport { operations, selectors } from '../../store';\n\nconst ContactsList = () => {\n  const dispatch = useDispatch();\n  const contactsData = useSelector(selectors.getContacts);\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  const items = useSelector(({ contacts }) => {\n    const toLowerCaseFilter = contacts.filter.toLowerCase();\n    const items = contactsData.filter(el =>\n      el.name.toLowerCase().includes(toLowerCaseFilter),\n    );\n    return items;\n  });\n\n  return (\n    <ul className={styles.list}>\n      {items.map(el => {\n        return (\n          <li className={styles.item} key={el.id}>\n            <span className={styles.span}>\n              {el.name}: {el.phone}\n            </span>\n            <button\n              className={styles.btn}\n              type=\"button\"\n              id={el.id}\n              onClick={() => {\n                dispatch(operations.deleteContact(el.id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default ContactsList;","import React from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactsList from './components/ContactList/ContactsList';\nimport { useDispatch } from 'react-redux';\nimport { operations } from './store/';\nimport './App.css';\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  return (\n    <main className=\"main\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm\n        onSubmit={(name, number) =>\n          dispatch(operations.addContact(name, number))\n        }\n      />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </main>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__2TGrv\",\"label\":\"ContactForm_label__O4VuG\",\"input\":\"ContactForm_input__3aaJY\",\"submit\":\"ContactForm_submit__34MPm\"};"],"sourceRoot":""}